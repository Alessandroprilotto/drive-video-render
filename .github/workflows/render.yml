name: render_video

on:
  workflow_dispatch: {}
  repository_dispatch:
    types: [render_video]

jobs:
  render:
    runs-on: ubuntu-latest

    steps:
      - name: Show event (debug)
        run: |
          echo "EVENT=$GITHUB_EVENT_NAME"
          cat "$GITHUB_EVENT_PATH" || true

      - name: Checkout
        uses: actions/checkout@v4

      - name: Install ffmpeg, rclone, Python
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg rclone python3 python3-pip
          ffmpeg -version
          rclone version
          python3 --version
          pip3 --version

      - name: Install Python deps for subtitles
        run: |
          pip3 install --upgrade pip
          pip3 install torch --index-url https://download.pytorch.org/whl/cpu
          pip3 install numpy faster-whisper==1.0.3

      - name: Configure rclone with Service Account
        env:
          GDRIVE_SA_JSON: ${{ secrets.GDRIVE_SA_JSON }}
          GDRIVE_FOLDER_ID: ${{ secrets.GDRIVE_FOLDER_ID }}
        run: |
          set -euo pipefail
          echo "$GDRIVE_SA_JSON" > "$GITHUB_WORKSPACE/sa.json"
          RCL="$GITHUB_WORKSPACE/rclone.conf"
          {
            echo "[gdrv]"
            echo "type = drive"
            echo "scope = drive"
            echo "service_account_file = $GITHUB_WORKSPACE/sa.json"
            echo "root_folder_id = $GDRIVE_FOLDER_ID"
          } > "$RCL"
          echo "RCLONE_CONFIG=$RCL" >> "$GITHUB_ENV"

      - name: Pull assets from Drive
        run: |
          mkdir -p "$GITHUB_WORKSPACE/assets"
          rclone copy gdrv: "$GITHUB_WORKSPACE/assets" --fast-list --transfers=8 --checkers=16
          echo "Scaricati:"
          find "$GITHUB_WORKSPACE/assets" -type f

      - name: Provide fonts to assets
        run: |
          mkdir -p "$GITHUB_WORKSPACE/assets/fonts"
          if ls "$GITHUB_WORKSPACE/.github/workflows/scripts/assets/fonts/"*.ttf >/dev/null 2>&1; then
            cp "$GITHUB_WORKSPACE/.github/workflows/scripts/assets/fonts/"*.ttf "$GITHUB_WORKSPACE/assets/fonts/" || true
          fi
          echo "Contenuto assets/fonts:"
          ls -la "$GITHUB_WORKSPACE/assets/fonts" || true

      - name: Show workspace tree (debug)
        run: |
          echo "== ROOT =="
          ls -la
          echo "== .github/workflows/scripts =="
          ls -la .github/workflows/scripts || true
          echo "== assets =="
          ls -la assets || true
          echo "== assets/fonts =="
          ls -la assets/fonts || true

      - name: Render video (FFmpeg, senza musica)
        run: |
          set -euo pipefail
          mkdir -p "$GITHUB_WORKSPACE/out"
          if [ -f ./render.sh ]; then
            R=./render.sh
          elif [ -f scripts/render.sh ]; then
            R=scripts/render.sh
          elif [ -f .github/workflows/scripts/render.sh ]; then
            R=.github/workflows/scripts/render.sh
          else
            echo "❌ render.sh non trovato in nessun percorso."
            exit 1
          fi
          echo "✔ Eseguo: $R"
          chmod +x "$R"
          "$R" "$GITHUB_WORKSPACE/assets" "$GITHUB_WORKSPACE/out"

      - name: Upload video senza musica
        uses: actions/upload-artifact@v4
        with:
          name: video-senza-musica
          path: ${{ github.workspace }}/out/final.mp4
          retention-days: 7
          compression-level: 6

      - name: Aggiungi musica al video finale
        run: |
          if [ -f ./add_music.sh ]; then
            M=./add_music.sh
          elif [ -f scripts/add_music.sh ]; then
            M=scripts/add_music.sh
          elif [ -f .github/workflows/scripts/add_music.sh ]; then
            M=.github/workflows/scripts/add_music.sh
          else
            echo "❌ add_music.sh non trovato."
            exit 1
          fi
          echo "✔ Eseguo: $M"
          chmod +x "$M"
          "$M" "$GITHUB_WORKSPACE/out/final.mp4" "$GITHUB_WORKSPACE/assets/music.mp3" "$GITHUB_WORKSPACE/out/final_with_music.mp4"

      - name: Upload video con musica
        uses: actions/upload-artifact@v4
        with:
          name: video-con-musica
          path: ${{ github.workspace }}/out/final_with_music.mp4
          retention-days: 7
          compression-level: 6

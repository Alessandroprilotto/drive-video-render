name: render_video

on:
  workflow_dispatch: {}
  repository_dispatch:
    types: [render_video]

jobs:
  render:
    runs-on: ubuntu-latest

    steps:
      - name: Show event (debug)
        run: |
          echo "EVENT=$GITHUB_EVENT_NAME"
          cat "$GITHUB_EVENT_PATH" || true

      - name: Checkout
        uses: actions/checkout@v4

      - name: Install ffmpeg and rclone
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg rclone
          ffmpeg -version
          rclone version

      # ⬇️ NUOVO: dipendenze per STT (sottotitoli automatici)
      - name: Install deps for subtitles
        run: |
          pip install --upgrade pip
          pip install faster-whisper==1.0.3

      - name: Configure rclone with Service Account
        env:
          GDRIVE_SA_JSON: ${{ secrets.GDRIVE_SA_JSON }}
          GDRIVE_FOLDER_ID: ${{ secrets.GDRIVE_FOLDER_ID }}
        run: |
          set -euo pipefail
          echo "$GDRIVE_SA_JSON" > "$GITHUB_WORKSPACE/sa.json"

          RCL="$GITHUB_WORKSPACE/rclone.conf"
          : > "$RCL"
          printf "[gdrv]\n"                                  >> "$RCL"
          printf "type = drive\n"                            >> "$RCL"
          printf "scope = drive\n"                           >> "$RCL"
          printf "service_account_file = %s/sa.json\n" "$GITHUB_WORKSPACE" >> "$RCL"
          printf "root_folder_id = %s\n" "$GDRIVE_FOLDER_ID" >> "$RCL"

          echo "RCLONE_CONFIG=$RCL" >> "$GITHUB_ENV"
          echo "=== rclone.conf ==="
          cat "$RCL"

      - name: Pull assets from Drive
        run: |
          mkdir -p "$GITHUB_WORKSPACE/assets"
          rclone copy gdrv: "$GITHUB_WORKSPACE/assets" --fast-list --transfers=8 --checkers=16
          echo "Scaricati:" && ls -la "$GITHUB_WORKSPACE/assets"

      # ⬇️ NUOVO: assicura che i font siano presenti dove lo script li cerca
      - name: Provide fonts to assets
        run: |
          mkdir -p "$GITHUB_WORKSPACE/assets/fonts"
          if ls "$GITHUB_WORKSPACE/scripts/assets/fonts/"*.ttf >/dev/null 2>&1; then
            cp "$GITHUB_WORKSPACE/scripts/assets/fonts/"*.ttf "$GITHUB_WORKSPACE/assets/fonts/"
          else
            echo "⚠️ Nessun .ttf trovato in scripts/assets/fonts/. Carica Montserrat-ExtraBold.ttf lì."
          fi
          echo "Contenuto assets/fonts:" && ls -la "$GITHUB_WORKSPACE/assets/fonts" || true

      - name: Render video (FFmpeg)
        run: |
          chmod +x scripts/render.sh
          scripts/render.sh "$GITHUB_WORKSPACE/assets" "$GITHUB_WORKSPACE/out"

      - name: Upload GitHub artifact (fallback)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: final-video
          path: |
            ${{ github.workspace }}/out/final.mp4
            ${{ github.workspace }}/out/render.log
          if-no-files-found: warn
          retention-days: 7
          compression-level: 6
